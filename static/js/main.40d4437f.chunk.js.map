{"version":3,"sources":["Header.tsx","AddGameForm.tsx","GameList.tsx","Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","formInitialState","name","saveGames","games","localStorage","setItem","JSON","stringify","_","uniq","AddGame","setGames","useState","form","setForm","onSubmit","event","preventDefault","getGames","push","onChange","target","value","type","parse","getItem","GameList","map","game","onClick","remove","g","removeGame","Content","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAMeA,EAJU,WACvB,OAAO,8B,6CCCHC,EAAmB,CACvBC,KAAM,IAGKC,EAAY,SAACC,GACxBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUC,IAAEC,KAAKN,MAmCvCO,EA5ByB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,EAAwBC,mBAASZ,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KAgBA,OACE,uBAAMC,SAfiB,SAACC,GACxBA,EAAMC,iBACN,IAAMd,EAAQe,IACI,KAAdL,EAAKZ,OACPE,EAAMgB,KAAKN,EAAKZ,MAChBC,EAAUC,GACVQ,EAASH,IAAEC,KAAKN,MASlB,UACE,0CAEE,uBAAOiB,SARS,SAAC,GAAsC,IAAD,IAAnCC,OAAUpB,EAAyB,EAAzBA,KAAMqB,EAAmB,EAAnBA,MACvCR,GAAQ,SAACD,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBZ,EAAOqB,QAOFC,KAAK,OAAOtB,KAAK,YAEnD,uBAAOsB,KAAK,SAASD,MAAM,iBCnCpBJ,EAAW,WAAO,IAAD,EAC5B,OAAOZ,KAAKkB,MAAL,UAAWpB,aAAaqB,QAAQ,gBAAhC,QAA4C,OA8BtCC,EA3BY,WACzB,MAA0Bd,mBAASM,KAAnC,mBAAOf,EAAP,KAAcQ,EAAd,KASA,OACE,qCACE,cAAC,EAAD,CAASA,SAAUA,IAClBR,EAAMwB,KAAI,SAACC,GAAD,OACT,gCACGA,EACD,uBACEL,KAAK,SACLD,MAAM,SACNO,QAAS,kBAhBA,SAACD,GAClB,IAAMzB,EAAQe,IACdV,IAAEsB,OAAO3B,GAAO,SAAC4B,GAAD,OAAOA,IAAMH,KAC7B1B,EAAUC,GACVQ,EAASR,GAYc6B,CAAWJ,QALpBA,UCXHK,EARW,WACxB,OACE,mCACE,cAAC,EAAD,OCOSC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40d4437f.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header: React.FC = () => {\n  return <></>;\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { getGames } from \"./GameList\";\n\nconst formInitialState = {\n  name: \"\",\n};\n\nexport const saveGames = (games: Array<String>) => {\n  localStorage.setItem(\"GAMES\", JSON.stringify(_.uniq(games)));\n};\n\ninterface AddGameProps {\n  setGames: Function;\n}\n\nconst AddGame: React.FC<AddGameProps> = ({ setGames }) => {\n  const [form, setForm] = useState(formInitialState);\n\n  const handleFormSubmit = (event: any) => {\n    event.preventDefault();\n    const games = getGames();\n    if (form.name !== \"\") {\n      games.push(form.name);\n      saveGames(games);\n      setGames(_.uniq(games));\n    }\n  };\n\n  const handleSetForm = ({ target: { name, value } }: any) => {\n    setForm((form) => ({ ...form, [name]: value }));\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <label>\n        Name:\n        <input onChange={handleSetForm} type=\"text\" name=\"name\" />\n      </label>\n      <input type=\"submit\" value=\"Add Game\" />\n    </form>\n  );\n};\n\nexport default AddGame;\n","import React, { useState } from \"react\";\nimport AddGame, { saveGames } from \"./AddGameForm\";\nimport _ from \"lodash\";\n\nexport const getGames = () => {\n  return JSON.parse(localStorage.getItem(\"GAMES\") ?? \"[]\");\n};\n\nconst GameList: React.FC = () => {\n  const [games, setGames] = useState(getGames());\n\n  const removeGame = (game: String) => {\n    const games = getGames();\n    _.remove(games, (g) => g === game);\n    saveGames(games);\n    setGames(games);\n  };\n\n  return (\n    <>\n      <AddGame setGames={setGames} />\n      {games.map((game: any) => (\n        <div key={game}>\n          {game}\n          <input\n            type=\"button\"\n            value=\"remove\"\n            onClick={() => removeGame(game)}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default GameList;\n","import \"./Content.css\";\nimport GameList from \"./GameList\";\n\nconst Content: React.FC = () => {\n  return (\n    <>\n      <GameList />\n    </>\n  );\n};\n\nexport default Content;\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}