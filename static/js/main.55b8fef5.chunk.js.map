{"version":3,"sources":["Header.tsx","AddGameForm.tsx","GameList.tsx","Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","formInitialState","name","publisher","year","saveGames","games","localStorage","setItem","JSON","stringify","_","uniq","AddGame","setGames","useState","form","setForm","handleSetForm","target","value","onSubmit","event","preventDefault","getGames","names","map","game","includes","push","className","onChange","type","parse","getItem","GameList","sortDirection","setSortDirection","onClick","sorted","sort","a","b","remove","g","removeGame","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55b8fef5.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header: React.FC = () => {\n  return <h1>React Game Tracker</h1>;\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { getGames } from \"./GameList\";\n\nexport interface gameObject {\n  name: string;\n  publisher: string;\n  year: string;\n}\n\nconst formInitialState: gameObject = {\n  name: \"\",\n  publisher: \"\",\n  year: \"\",\n};\n\nexport const saveGames = (games: Array<String>) => {\n  localStorage.setItem(\"GAMES\", JSON.stringify(_.uniq(games)));\n};\n\ninterface AddGameProps {\n  setGames: Function;\n}\n\nconst AddGame: React.FC<AddGameProps> = ({ setGames }) => {\n  const [form, setForm] = useState(formInitialState);\n\n  const handleFormSubmit = (event: any) => {\n    event.preventDefault();\n    const games = getGames();\n    const names = games.map((game: gameObject) => game.name);\n    if (form.name !== \"\" && !names.includes(form.name)) {\n      games.push({\n        name: form.name,\n        publisher: form.publisher,\n        year: form.year,\n      });\n      saveGames(games);\n      setGames(games);\n    }\n  };\n\n  const handleSetForm = ({ target: { name, value } }: any) => {\n    setForm((form) => ({ ...form, [name]: value }));\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <label>\n        Name:\n        <input\n          className={\"add-game-button\"}\n          onChange={handleSetForm}\n          type=\"text\"\n          name=\"name\"\n        />\n      </label>\n      <label>\n        Publisher:\n        <input\n          className={\"add-game-button\"}\n          onChange={handleSetForm}\n          type=\"text\"\n          name=\"publisher\"\n        />\n      </label>\n      <label>\n        Year:\n        <input\n          className={\"add-game-button\"}\n          onChange={handleSetForm}\n          type=\"year\"\n          name=\"year\"\n        />\n      </label>\n      <input className={\"add-game-button\"} type=\"submit\" value=\"Add Game\" />\n    </form>\n  );\n};\n\nexport default AddGame;\n","import React, { useState } from \"react\";\nimport AddGame, { saveGames, gameObject } from \"./AddGameForm\";\nimport _ from \"lodash\";\n\nexport const getGames = () => {\n  return JSON.parse(localStorage.getItem(\"GAMES\") ?? \"[]\");\n};\n\nconst GameList: React.FC = () => {\n  const [games, setGames] = useState(getGames());\n  const [sortDirection, setSortDirection] = useState(\"ascending\");\n\n  const removeGame = (game: gameObject) => {\n    const games = getGames();\n    _.remove(\n      games,\n      (g: gameObject) => JSON.stringify(g) === JSON.stringify(game)\n    );\n    saveGames(games);\n    setGames(games);\n  };\n\n  const sortListByYear = () => {\n    const games = getGames();\n    if (sortDirection === \"ascending\") {\n      setSortDirection(\"decending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.year > b.year ? 1 : -1\n      );\n      setGames(sorted);\n    }\n    if (sortDirection === \"decending\") {\n      setSortDirection(\"ascending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.year > b.year ? -1 : 1\n      );\n      setGames(sorted);\n    }\n  };\n\n  const sortListByPublisher = () => {\n    const games = getGames();\n    if (sortDirection === \"ascending\") {\n      setSortDirection(\"decending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.publisher > b.publisher ? 1 : -1\n      );\n      setGames(sorted);\n    }\n    if (sortDirection === \"decending\") {\n      setSortDirection(\"ascending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.publisher > b.publisher ? 1 : -1\n      );\n      setGames(sorted);\n    }\n  };\n\n  const sortListByName = () => {\n    const games = getGames();\n    if (sortDirection === \"ascending\") {\n      setSortDirection(\"decending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.name > b.name ? 1 : -1\n      );\n      setGames(sorted);\n    }\n    if (sortDirection === \"decending\") {\n      setSortDirection(\"ascending\");\n      const sorted = games.sort((a: gameObject, b: gameObject) =>\n        a.name > b.name ? 1 : -1\n      );\n      setGames(sorted);\n    }\n  };\n\n  return (\n    <>\n      <AddGame setGames={setGames} />\n      <div className=\"list-head\">\n        <div onClick={sortListByName}>Name</div>\n        <div onClick={sortListByPublisher}>Publisher</div>\n        <div onClick={sortListByYear}>Year</div>\n      </div>\n      {games.map((game: any) => (\n        <div className={\"game\"} key={game.name}>\n          <div className=\"game-name\">{game.name}</div>\n          <div className=\"game-publisher\">{game.publisher}</div>\n          <div className=\"game-year\">{game.year}</div>\n          <input\n            className={\"remove-button\"}\n            type=\"button\"\n            value=\"remove\"\n            onClick={() => removeGame(game)}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default GameList;\n","import \"./Content.css\";\nimport GameList from \"./GameList\";\n\nconst Content: React.FC = () => {\n  return (\n    <>\n      <GameList />\n    </>\n  );\n};\n\nexport default Content;\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}